name: build

on:
  push:
    paths:
      - 'src/**'
  workflow_dispatch:

jobs:
  update:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: disable auto crlf
        uses: steve02081504/disable-autocrlf@v1
        with:
          fuck-auto-CRLF: true
      - uses: actions/checkout@v2

      - name: build & minify
        run: |
          npm install rollup terser uglify-js -g
          rollup -c ./.github/rollup.config.mjs
          cd dist
          terser ./jsstp.min.js -o ./jsstp.min.js -c "unsafe=true,inline=2,computed_props=false" -m --mangle-props "regex=/^_.*_$/"
          terser ./jsstp.mjs -o ./jsstp.mjs -c "unsafe=true,inline=2,computed_props=false" -m --mangle-props "regex=/^_.*_$/" --module

          uglifyjs ./jsstp.min.js -o ./jsstp.min.js -c "unsafe=true,properties=false" -m --mangle-props regex=/^#/
          uglifyjs ./jsstp.mjs -o ./jsstp.mjs -c "unsafe=true,properties=false" -m --mangle-props regex=/^#/ --module

          # 为了消除${t=t}这种代码，你需要多调用几遍uglifyjs
          uglifyjs ./jsstp.min.js -o ./jsstp.min.js -c "unsafe=true,properties=false" -m --mangle-props regex=/^#/
          uglifyjs ./jsstp.mjs -o ./jsstp.mjs -c "unsafe=true,properties=false" -m --mangle-props regex=/^#/ --module

          sed -i 's/var jsstp=function(){/var jsstp=(()=>{/g' jsstp.min.js
          sed -i 's/}();$/})()\n/g' jsstp.min.js

          sed -i 's/};$/}\n/g' jsstp.mjs

          cd ..

      - name: add all
        run: git add -A
      - name: push
        uses: actions-go/push@master
        with:
          author-email: taromati2@outlook.com
          author-name: Taromati2
          commit-message: 'file update~'
          remote: origin
          token: ${{ secrets.BOT_TOKEN }}
