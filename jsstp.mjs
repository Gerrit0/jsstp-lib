export var jsstp=(()=>{let s="Has_Event",r="Get_Supported_Events",t=Object,n=t.assign,u="\r\n",i="local",h="external",a="get_passthrough",o=(t,e)=>{var s=t.indexOf(e);return[t.substring(0,s),t.substring(s+e.length)]};class _{#t;#i;constructor(t,e,s={}){this.#t=""+t,s.length&&(this.#i=s),n(this,e)}static from_string(t){var e,[t,...s]=t.split(u),r={},n=[];let i;s.length-=2;for(e of s){var[h,a]=o(e,": ");/^\w[^\s]*$/.test(h)?r[i=h]=a:i?r[i]+=u+e:n.push(e)}return new _(t,r,n)}get unknown_lines(){return this.#i||[]}get head(){return this.#t}toString(){return[this.#t,...this.unknown_lines,...t.entries(this).map(([t,e])=>t+": "+e),"",""].join(u)}to_string(){return this.toString()}toJSON(){return{head:this.#t,unknown_lines:this.#i,body:n({},this)}}get return_code(){return+this.#t.split(" ").find(t=>+t==+t)}get_passthrough(t){return this["X-SSTP-PassThru-"+t]}}class e{constructor(t){if(t)for(var e of t.unknown_lines){var s,r;e&&([e,s]=o(e,""),[e,r]=o(e,"."),this[e]||={},this[e][r]=s)}}get_uuid_by(e,s){return this.uuids.find(t=>this[t][e]==s)}get_list_of(e){return this.uuids.map(t=>this[t][e])}get uuids(){return t.keys(this)}get keys(){return this.uuids}get length(){return this.keys.length}get available(){return!!this.length}}class l{#h;#u;#o;#_;#l;constructor(t=jsstp){this.#h=t}async check_event(t,e=i){var s;return this.#o?this.#_[e].includes(t):!!this.#u&&(null!=(s=this.#l[e][t])?s:(s=await this.#h.has_event(t),this.#l[e][t]=s))}get available(){return this.#u}get supported_events_available(){return this.#o}async reset(){this.clear();var t=this.#h;return this.#u=await t.has_event(s),this.#o=this.#u&&await t.has_event(r),this.#o&&(this.#_=await t.get_supported_events()),this}async init(){return this.reset()}clear(){this.#u=this.#o=!1,this.#l={local:{},external:{}}}}class c{#g;RequestHeader;default_info;constructor(t,e){this.RequestHeader={"Content-Type":"text/plain",Origin:window.location.origin},this.default_info={Charset:"UTF-8"},this.host=e,this.sendername=t}set host(t){this.#g=t||"http://localhost:9801/api/sstp/v1"}get host(){return this.#g}set sendername(t){this.default_info.Sender=t||"jsstp-client"}get sendername(){return this.default_info.Sender}costom_send(t,r,e){var s=(e,s)=>fetch(this.#g,{method:"POST",headers:this.RequestHeader,body:""+new _(t,{...this.default_info,...r})}).then(t=>200!=t.status?s(t.status):t.text().then(t=>e(_.from_string(t)))).catch(s);return e?s(e,()=>{}):new Promise(s)}async has_event(t,e=h){t=(await this.SEND({Event:s,Reference0:t,Reference1:e}))[a]("Result");return!!t&&"0"!=t}async get_supported_events(){var t=await this.SEND({Event:r}),e=t[a](i),t=t[a](h);return{local:(e||"").split(","),external:(t||"").split(",")}}async get_fmo_infos(){return this.EXECUTE({Command:"GetFMO"}).then(t=>new e(t)).catch(()=>new e)}async available(){return(await this.get_fmo_infos()).available}async new_event_queryer(){return new l(this).init()}}let g={SEND:1.4,NOTIFY:1.1,COMMUNICATE:1.1,EXECUTE:1.2,GIVE:1.1};var v=c.prototype;for(let s in g)v[s]=function(t,e){return this.costom_send(s+" SSTP/"+g[s],t,e)};return n(v,{type:c,sstp_info_t:_,fmo_info_t:e,ghost_events_queryer_t:l}),new c})();